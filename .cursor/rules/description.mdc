---
description: Global rules and description
globs: 
---
# このリポジトリはMonacoEditerを使ったプログラマー向けのメモ帳です。

- SyntaxHeighlightが効く
- マルチタブで複数のメモを保持、編集可能
- 基本的にメモは使い捨てを想定し、テキストの実体ファイルと１対１の関係は持たない。
- ファイルのインポートとエクスポートのみ対応する。
- 保持メモはユーザーのGoogleDriveアカウントで同期する。

- Wails＋React＋MUI＋MonacoEditorでデスクトップアプリ版、Webアプリ版の両方を作りたい。先にデスクトップアプリ版。

- バックエンドを修正したときは、リンタエラーが出るので、都度wails generate moduleを実行してください

## Wailsはｖ2

------------------------------------------------------------
バックエンドアーキテクチャの概要
------------------------------------------------------------
//
このアプリケーションは以下のサービスで構成されています：
//
1. App (app.go)
   - アプリケーションのメインエントリーポイント
   - 各サービスの初期化と連携を管理
   - フロントエンドとバックエンドの橋渡し役
//
2. NoteService (note_service.go)
   - ローカルのノート操作を担当
   - ノートの作成、読み込み、保存、削除
   - ノートリストの管理とメタデータの同期
//
3. DriveService (drive_service.go, drive_sync_service.go, drive_operations.go)
   - Google Driveとの同期機能を提供
   - 認証管理（OAuth2.0）
   - ノートのクラウド同期
   - 非同期操作のキュー管理
//
4. SettingsService (settings_service.go)
   - アプリケーション設定の管理
   - ウィンドウ状態の保存/復元
   - ユーザー設定の保存/読み込み
//
5. FileService (file_service.go)
   - ローカルファイルシステムとの操作
   - ファイルの開く/保存ダイアログ
   - 外部ファイルの読み込み
//
ファイル構成：
- domain.go: データモデルの定義
- app.go: メインアプリケーションロジック
- note_service.go: ノート操作の実装
- drive_service.go: Google Drive連携の中核実装
- drive_sync_service.go: 同期ロジックの中レベル実装
- drive_operations.go: Drive操作の低レベル実装
- drive_operations_queue.go: Drive操作のキュー管理ラッパー
- settings_service.go: 設定管理の実装
- file_service.go: ファイル操作の実装